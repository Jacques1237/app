{"ast":null,"code":"import _createForOfIteratorHelper from \"C:/Users/wwwja/Desktop/Gallery-master/app/Gallery/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";\nimport _asyncToGenerator from \"C:/Users/wwwja/Desktop/Gallery-master/app/Gallery/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"C:/Users/wwwja/Desktop/Gallery-master/app/Gallery/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"C:/Users/wwwja/Desktop/Gallery-master/app/Gallery/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/wwwja/Desktop/Gallery-master/app/Gallery/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _regeneratorRuntime from \"C:/Users/wwwja/Desktop/Gallery-master/app/Gallery/node_modules/@babel/runtime/regenerator\";\nimport { r as registerInstance, c as createEvent, d as getIonMode, h, H as Host, e as getElement } from './core-ca0488fc.js';\nimport './config-3c7f3790.js';\nimport { f as findItemLabel } from './helpers-46f4a262.js';\nimport { c as createColorClasses, h as hostContext } from './theme-18cbe2cc.js';\nimport { f as findCheckedOption, w as watchForOptions } from './watch-options-2af96011.js';\n\nvar Radio = /*#__PURE__*/function () {\n  function Radio(hostRef) {\n    var _this = this;\n\n    _classCallCheck(this, Radio);\n\n    registerInstance(this, hostRef);\n    this.inputId = \"ion-rb-\".concat(radioButtonIds++);\n    /**\n     * The name of the control, which is submitted with the form data.\n     */\n\n    this.name = this.inputId;\n    /**\n     * If `true`, the user cannot interact with the radio.\n     */\n\n    this.disabled = false;\n    /**\n     * If `true`, the radio is selected.\n     */\n\n    this.checked = false;\n\n    this.onFocus = function () {\n      _this.ionFocus.emit();\n    };\n\n    this.onBlur = function () {\n      _this.ionBlur.emit();\n    };\n\n    this.onClick = function () {\n      if (_this.checked) {\n        _this.ionDeselect.emit();\n      } else {\n        _this.checked = true;\n      }\n    };\n\n    this.ionStyle = createEvent(this, \"ionStyle\", 7);\n    this.ionSelect = createEvent(this, \"ionSelect\", 7);\n    this.ionDeselect = createEvent(this, \"ionDeselect\", 7);\n    this.ionFocus = createEvent(this, \"ionFocus\", 7);\n    this.ionBlur = createEvent(this, \"ionBlur\", 7);\n  }\n\n  _createClass(Radio, [{\n    key: \"colorChanged\",\n    value: function colorChanged() {\n      this.emitStyle();\n    }\n  }, {\n    key: \"checkedChanged\",\n    value: function checkedChanged(isChecked) {\n      if (isChecked) {\n        this.ionSelect.emit({\n          checked: true,\n          value: this.value\n        });\n      }\n\n      this.emitStyle();\n    }\n  }, {\n    key: \"disabledChanged\",\n    value: function disabledChanged() {\n      this.emitStyle();\n    }\n  }, {\n    key: \"componentWillLoad\",\n    value: function componentWillLoad() {\n      if (this.value === undefined) {\n        this.value = this.inputId;\n      }\n\n      this.emitStyle();\n    }\n  }, {\n    key: \"emitStyle\",\n    value: function emitStyle() {\n      this.ionStyle.emit({\n        'radio-checked': this.checked,\n        'interactive-disabled': this.disabled\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _Object$assign;\n\n      var inputId = this.inputId,\n          disabled = this.disabled,\n          checked = this.checked,\n          color = this.color,\n          el = this.el;\n      var mode = getIonMode(this);\n      var labelId = inputId + '-lbl';\n      var label = findItemLabel(el);\n\n      if (label) {\n        label.id = labelId;\n      }\n\n      return h(Host, {\n        onClick: this.onClick,\n        role: \"radio\",\n        \"aria-disabled\": disabled ? 'true' : null,\n        \"aria-checked\": \"\".concat(checked),\n        \"aria-labelledby\": labelId,\n        class: Object.assign(Object.assign({}, createColorClasses(color)), (_Object$assign = {}, _defineProperty(_Object$assign, mode, true), _defineProperty(_Object$assign, 'in-item', hostContext('ion-item', el)), _defineProperty(_Object$assign, 'interactive', true), _defineProperty(_Object$assign, 'radio-checked', checked), _defineProperty(_Object$assign, 'radio-disabled', disabled), _Object$assign))\n      }, h(\"div\", {\n        class: \"radio-icon\"\n      }, h(\"div\", {\n        class: \"radio-inner\"\n      })), h(\"button\", {\n        type: \"button\",\n        onFocus: this.onFocus,\n        onBlur: this.onBlur,\n        disabled: disabled\n      }));\n    }\n  }, {\n    key: \"el\",\n    get: function get() {\n      return getElement(this);\n    }\n  }], [{\n    key: \"watchers\",\n    get: function get() {\n      return {\n        \"color\": [\"colorChanged\"],\n        \"checked\": [\"checkedChanged\"],\n        \"disabled\": [\"disabledChanged\"]\n      };\n    }\n  }, {\n    key: \"style\",\n    get: function get() {\n      return \":host{display:inline-block;position:relative;-webkit-box-sizing:border-box;box-sizing:border-box;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;z-index:2}:host(.radio-disabled){pointer-events:none}.radio-icon{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;contain:layout size style}.radio-icon,button{width:100%;height:100%}button{left:0;top:0;margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;position:absolute;border:0;background:transparent;cursor:pointer;-webkit-appearance:none;-moz-appearance:none;appearance:none;outline:none}:host-context([dir=rtl]) button,[dir=rtl] button{left:unset;right:unset;right:0}button::-moz-focus-inner{border:0}.radio-icon,.radio-inner{-webkit-box-sizing:border-box;box-sizing:border-box}:host{--color-checked:var(--ion-color-primary,#3880ff);width:15px;height:24px}:host(.ion-color.radio-checked) .radio-inner{border-color:var(--ion-color-base)}.item-radio.item-ios ion-label{margin-left:0}\\@supports ((-webkit-margin-start:0) or (margin-inline-start:0)) or (-webkit-margin-start:0){.item-radio.item-ios ion-label{margin-left:unset;-webkit-margin-start:0;margin-inline-start:0}}.radio-inner{width:33%;height:50%}:host(.radio-checked) .radio-inner{-webkit-transform:rotate(45deg);transform:rotate(45deg);border-width:2px;border-top-width:0;border-left-width:0;border-style:solid;border-color:var(--color-checked)}:host(.radio-disabled){opacity:.3}:host(.ion-focused) .radio-icon:after{border-radius:50%;left:-9px;top:-8px;display:block;position:absolute;width:36px;height:36px;background:var(--ion-color-primary-tint,#4c8dff);content:\\\"\\\";opacity:.2}:host-context([dir=rtl]).ion-focused .radio-icon:after,:host-context([dir=rtl]):host(.ion-focused) .radio-icon:after{left:unset;right:unset;right:-9px}:host(.in-item){margin-left:8px;margin-right:11px;margin-top:8px;margin-bottom:8px;display:block;position:static}\\@supports ((-webkit-margin-start:0) or (margin-inline-start:0)) or (-webkit-margin-start:0){:host(.in-item){margin-left:unset;margin-right:unset;-webkit-margin-start:8px;margin-inline-start:8px;-webkit-margin-end:11px;margin-inline-end:11px}}:host(.in-item[slot=start]){margin-left:3px;margin-right:21px;margin-top:8px;margin-bottom:8px}\\@supports ((-webkit-margin-start:0) or (margin-inline-start:0)) or (-webkit-margin-start:0){:host(.in-item[slot=start]){margin-left:unset;margin-right:unset;-webkit-margin-start:3px;margin-inline-start:3px;-webkit-margin-end:21px;margin-inline-end:21px}}\";\n    }\n  }]);\n\n  return Radio;\n}();\n\nvar radioButtonIds = 0;\n\nvar RadioGroup = /*#__PURE__*/function () {\n  function RadioGroup(hostRef) {\n    var _this2 = this;\n\n    _classCallCheck(this, RadioGroup);\n\n    registerInstance(this, hostRef);\n    this.inputId = \"ion-rg-\".concat(radioGroupIds++);\n    this.labelId = \"\".concat(this.inputId, \"-lbl\");\n    /**\n     * If `true`, the radios can be deselected.\n     */\n\n    this.allowEmptySelection = false;\n    /**\n     * The name of the control, which is submitted with the form data.\n     */\n\n    this.name = this.inputId;\n\n    this.onSelect = function (ev) {\n      var selectedRadio = ev.target;\n\n      if (selectedRadio) {\n        _this2.value = selectedRadio.value;\n      }\n    };\n\n    this.onDeselect = function (ev) {\n      var selectedRadio = ev.target;\n\n      if (selectedRadio) {\n        selectedRadio.checked = false;\n        _this2.value = undefined;\n      }\n    };\n\n    this.ionChange = createEvent(this, \"ionChange\", 7);\n  }\n\n  _createClass(RadioGroup, [{\n    key: \"valueChanged\",\n    value: function valueChanged(value) {\n      this.updateRadios();\n      this.ionChange.emit({\n        value: value\n      });\n    }\n  }, {\n    key: \"connectedCallback\",\n    value: function () {\n      var _connectedCallback = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var _this3 = this;\n\n        var el, header, label, radio;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                // Get the list header if it exists and set the id\n                // this is used to set aria-labelledby\n                el = this.el;\n                header = el.querySelector('ion-list-header') || el.querySelector('ion-item-divider');\n\n                if (header) {\n                  label = header.querySelector('ion-label');\n\n                  if (label) {\n                    this.labelId = label.id = this.name + '-lbl';\n                  }\n                }\n\n                if (!(this.value === undefined)) {\n                  _context.next = 9;\n                  break;\n                }\n\n                radio = findCheckedOption(el, 'ion-radio');\n\n                if (!(radio !== undefined)) {\n                  _context.next = 9;\n                  break;\n                }\n\n                _context.next = 8;\n                return radio.componentOnReady();\n\n              case 8:\n                if (this.value === undefined) {\n                  this.value = radio.value;\n                }\n\n              case 9:\n                this.mutationO = watchForOptions(el, 'ion-radio', function (newOption) {\n                  if (newOption !== undefined) {\n                    newOption.componentOnReady().then(function () {\n                      _this3.value = newOption.value;\n                    });\n                  } else {\n                    _this3.updateRadios();\n                  }\n                });\n                this.updateRadios();\n\n              case 11:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function connectedCallback() {\n        return _connectedCallback.apply(this, arguments);\n      }\n\n      return connectedCallback;\n    }()\n  }, {\n    key: \"disconnectedCallback\",\n    value: function disconnectedCallback() {\n      if (this.mutationO) {\n        this.mutationO.disconnect();\n        this.mutationO = undefined;\n      }\n    }\n  }, {\n    key: \"updateRadios\",\n    value: function () {\n      var _updateRadios = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        var radios, value, hasChecked, _iterator, _step, radio;\n\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return this.getRadios();\n\n              case 2:\n                radios = _context2.sent;\n                value = this.value;\n                hasChecked = false; // Walk the DOM in reverse order, since the last selected one wins!\n\n                _iterator = _createForOfIteratorHelper(radios);\n\n                try {\n                  for (_iterator.s(); !(_step = _iterator.n()).done;) {\n                    radio = _step.value;\n\n                    if (!hasChecked && radio.value === value) {\n                      // correct value for this radio\n                      // but this radio isn't checked yet\n                      // and we haven't found a checked yet\n                      hasChecked = true;\n                      radio.checked = true;\n                    } else {\n                      // this radio doesn't have the correct value\n                      // or the radio group has been already checked\n                      radio.checked = false;\n                    }\n                  } // Reset value if\n\n                } catch (err) {\n                  _iterator.e(err);\n                } finally {\n                  _iterator.f();\n                }\n\n                if (!hasChecked) {\n                  this.value = undefined;\n                }\n\n              case 8:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function updateRadios() {\n        return _updateRadios.apply(this, arguments);\n      }\n\n      return updateRadios;\n    }()\n  }, {\n    key: \"getRadios\",\n    value: function getRadios() {\n      return Promise.all(Array.from(this.el.querySelectorAll('ion-radio')).map(function (r) {\n        return r.componentOnReady();\n      }));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return h(Host, {\n        role: \"radiogroup\",\n        \"aria-labelledby\": this.labelId,\n        onIonSelect: this.onSelect,\n        onIonDeselect: this.allowEmptySelection ? this.onDeselect : undefined,\n        class: getIonMode(this)\n      });\n    }\n  }, {\n    key: \"el\",\n    get: function get() {\n      return getElement(this);\n    }\n  }], [{\n    key: \"watchers\",\n    get: function get() {\n      return {\n        \"value\": [\"valueChanged\"]\n      };\n    }\n  }]);\n\n  return RadioGroup;\n}();\n\nvar radioGroupIds = 0;\nexport { Radio as ion_radio, RadioGroup as ion_radio_group };","map":null,"metadata":{},"sourceType":"module"}