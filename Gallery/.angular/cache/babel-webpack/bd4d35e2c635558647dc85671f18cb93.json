{"ast":null,"code":"import _defineProperty from \"C:/Users/wwwja/Desktop/Gallery-master/app/Gallery/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _asyncToGenerator from \"C:/Users/wwwja/Desktop/Gallery-master/app/Gallery/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:/Users/wwwja/Desktop/Gallery-master/app/Gallery/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/wwwja/Desktop/Gallery-master/app/Gallery/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _regeneratorRuntime from \"C:/Users/wwwja/Desktop/Gallery-master/app/Gallery/node_modules/@babel/runtime/regenerator\";\nimport { r as registerInstance, c as createEvent, d as getIonMode, h, H as Host, e as getElement } from './core-ca0488fc.js';\nimport './config-3c7f3790.js';\nimport { f as findItemLabel, a as renderHiddenInput } from './helpers-46f4a262.js';\nimport { c as createColorClasses, h as hostContext } from './theme-18cbe2cc.js';\nimport { h as hapticSelection } from './haptic-c8f1473e.js';\n\nvar Toggle = /*#__PURE__*/function () {\n  function Toggle(hostRef) {\n    var _this = this;\n\n    _classCallCheck(this, Toggle);\n\n    registerInstance(this, hostRef);\n    this.inputId = \"ion-tg-\".concat(toggleIds++);\n    this.lastDrag = 0;\n    this.activated = false;\n    /**\n     * The name of the control, which is submitted with the form data.\n     */\n\n    this.name = this.inputId;\n    /**\n     * If `true`, the toggle is selected.\n     */\n\n    this.checked = false;\n    /**\n     * If `true`, the user cannot interact with the toggle.\n     */\n\n    this.disabled = false;\n    /**\n     * The value of the toggle does not mean if it's checked or not, use the `checked`\n     * property for that.\n     *\n     * The value of a toggle is analogous to the value of a `<input type=\"checkbox\">`,\n     * it's only used when the toggle participates in a native `<form>`.\n     */\n\n    this.value = 'on';\n\n    this.onClick = function () {\n      if (_this.lastDrag + 300 < Date.now()) {\n        _this.checked = !_this.checked;\n      }\n    };\n\n    this.onFocus = function () {\n      _this.ionFocus.emit();\n    };\n\n    this.onBlur = function () {\n      _this.ionBlur.emit();\n    };\n\n    this.ionChange = createEvent(this, \"ionChange\", 7);\n    this.ionFocus = createEvent(this, \"ionFocus\", 7);\n    this.ionBlur = createEvent(this, \"ionBlur\", 7);\n    this.ionStyle = createEvent(this, \"ionStyle\", 7);\n  }\n\n  _createClass(Toggle, [{\n    key: \"checkedChanged\",\n    value: function checkedChanged(isChecked) {\n      this.ionChange.emit({\n        checked: isChecked,\n        value: this.value\n      });\n    }\n  }, {\n    key: \"disabledChanged\",\n    value: function disabledChanged() {\n      this.emitStyle();\n\n      if (this.gesture) {\n        this.gesture.setDisabled(this.disabled);\n      }\n    }\n  }, {\n    key: \"connectedCallback\",\n    value: function () {\n      var _connectedCallback = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var _this2 = this;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return import('./index-624eea58.js');\n\n              case 2:\n                this.gesture = _context.sent.createGesture({\n                  el: this.el,\n                  gestureName: 'toggle',\n                  gesturePriority: 100,\n                  threshold: 5,\n                  passive: false,\n                  onStart: function onStart() {\n                    return _this2.onStart();\n                  },\n                  onMove: function onMove(ev) {\n                    return _this2.onMove(ev);\n                  },\n                  onEnd: function onEnd(ev) {\n                    return _this2.onEnd(ev);\n                  }\n                });\n                this.disabledChanged();\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function connectedCallback() {\n        return _connectedCallback.apply(this, arguments);\n      }\n\n      return connectedCallback;\n    }()\n  }, {\n    key: \"disconnectedCallback\",\n    value: function disconnectedCallback() {\n      if (this.gesture) {\n        this.gesture.destroy();\n        this.gesture = undefined;\n      }\n    }\n  }, {\n    key: \"componentWillLoad\",\n    value: function componentWillLoad() {\n      this.emitStyle();\n    }\n  }, {\n    key: \"emitStyle\",\n    value: function emitStyle() {\n      this.ionStyle.emit({\n        'interactive-disabled': this.disabled\n      });\n    }\n  }, {\n    key: \"onStart\",\n    value: function onStart() {\n      this.activated = true; // touch-action does not work in iOS\n\n      this.setFocus();\n    }\n  }, {\n    key: \"onMove\",\n    value: function onMove(detail) {\n      if (shouldToggle(document, this.checked, detail.deltaX, -10)) {\n        this.checked = !this.checked;\n        hapticSelection();\n      }\n    }\n  }, {\n    key: \"onEnd\",\n    value: function onEnd(ev) {\n      this.activated = false;\n      this.lastDrag = Date.now();\n      ev.event.preventDefault();\n      ev.event.stopImmediatePropagation();\n    }\n  }, {\n    key: \"getValue\",\n    value: function getValue() {\n      return this.value || '';\n    }\n  }, {\n    key: \"setFocus\",\n    value: function setFocus() {\n      if (this.buttonEl) {\n        this.buttonEl.focus();\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _Object$assign,\n          _this3 = this;\n\n      var inputId = this.inputId,\n          disabled = this.disabled,\n          checked = this.checked,\n          activated = this.activated,\n          color = this.color,\n          el = this.el;\n      var mode = getIonMode(this);\n      var labelId = inputId + '-lbl';\n      var label = findItemLabel(el);\n      var value = this.getValue();\n\n      if (label) {\n        label.id = labelId;\n      }\n\n      renderHiddenInput(true, el, this.name, checked ? value : '', disabled);\n      return h(Host, {\n        onClick: this.onClick,\n        role: \"checkbox\",\n        \"aria-disabled\": disabled ? 'true' : null,\n        \"aria-checked\": \"\".concat(checked),\n        \"aria-labelledby\": labelId,\n        class: Object.assign(Object.assign({}, createColorClasses(color)), (_Object$assign = {}, _defineProperty(_Object$assign, mode, true), _defineProperty(_Object$assign, 'in-item', hostContext('ion-item', el)), _defineProperty(_Object$assign, 'toggle-activated', activated), _defineProperty(_Object$assign, 'toggle-checked', checked), _defineProperty(_Object$assign, 'toggle-disabled', disabled), _defineProperty(_Object$assign, 'interactive', true), _Object$assign))\n      }, h(\"div\", {\n        class: \"toggle-icon\"\n      }, h(\"div\", {\n        class: \"toggle-inner\"\n      })), h(\"button\", {\n        type: \"button\",\n        onFocus: this.onFocus,\n        onBlur: this.onBlur,\n        disabled: disabled,\n        ref: function ref(btnEl) {\n          return _this3.buttonEl = btnEl;\n        }\n      }));\n    }\n  }, {\n    key: \"el\",\n    get: function get() {\n      return getElement(this);\n    }\n  }], [{\n    key: \"watchers\",\n    get: function get() {\n      return {\n        \"checked\": [\"checkedChanged\"],\n        \"disabled\": [\"disabledChanged\"]\n      };\n    }\n  }, {\n    key: \"style\",\n    get: function get() {\n      return \":host{-webkit-box-sizing:content-box!important;box-sizing:content-box!important;display:inline-block;outline:none;contain:content;cursor:pointer;-ms-touch-action:none;touch-action:none;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;z-index:2}:host(.ion-focused) input{border:2px solid #5e9ed6}:host(.toggle-disabled){pointer-events:none}button{left:0;top:0;margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;position:absolute;width:100%;height:100%;border:0;background:transparent;cursor:pointer;-webkit-appearance:none;-moz-appearance:none;appearance:none;outline:none}:host-context([dir=rtl]) button,[dir=rtl] button{left:unset;right:unset;right:0}button::-moz-focus-inner{border:0}:host{--background:rgba(var(--ion-text-color-rgb,0,0,0),0.088);--background-checked:var(--ion-color-primary,#3880ff);--handle-background:#fff;--handle-background-checked:#fff;-webkit-box-sizing:content-box;box-sizing:content-box;position:relative;width:51px;height:32px;contain:strict}:host(.ion-color.toggle-checked) .toggle-icon{background:var(--ion-color-base)}.toggle-icon{border-radius:16px;display:block;position:relative;width:100%;height:100%;-webkit-transform:translateZ(0);transform:translateZ(0);-webkit-transition:background-color .3s;transition:background-color .3s;background:var(--background);overflow:hidden;pointer-events:none}.toggle-inner{left:2px;top:2px;border-radius:14px;position:absolute;width:28px;height:28px;-webkit-transition:width .12s ease-in-out 80ms,left .11s ease-in-out 80ms,right .11s ease-in-out 80ms,-webkit-transform .3s;transition:width .12s ease-in-out 80ms,left .11s ease-in-out 80ms,right .11s ease-in-out 80ms,-webkit-transform .3s;transition:transform .3s,width .12s ease-in-out 80ms,left .11s ease-in-out 80ms,right .11s ease-in-out 80ms;transition:transform .3s,width .12s ease-in-out 80ms,left .11s ease-in-out 80ms,right .11s ease-in-out 80ms,-webkit-transform .3s;background:var(--handle-background);-webkit-box-shadow:0 3px 12px rgba(0,0,0,.16),0 3px 1px rgba(0,0,0,.1);box-shadow:0 3px 12px rgba(0,0,0,.16),0 3px 1px rgba(0,0,0,.1);will-change:transform;contain:strict}:host-context([dir=rtl]) .toggle-inner,[dir=rtl] .toggle-inner{left:unset;right:unset;right:2px}:host(.toggle-checked) .toggle-icon{background:var(--background-checked)}:host(.toggle-activated) .toggle-icon:before,:host(.toggle-checked) .toggle-icon:before{-webkit-transform:scale3d(0,0,0);transform:scale3d(0,0,0)}:host(.toggle-checked) .toggle-inner{-webkit-transform:translate3d(19px,0,0);transform:translate3d(19px,0,0);background:var(--handle-background-checked)}:host-context([dir=rtl]).toggle-checked .toggle-inner,:host-context([dir=rtl]):host(.toggle-checked) .toggle-inner{-webkit-transform:translate3d(calc(-1 * 19px),0,0);transform:translate3d(calc(-1 * 19px),0,0)}:host(.toggle-activated.toggle-checked) .toggle-inner:before{-webkit-transform:scale3d(0,0,0);transform:scale3d(0,0,0)}:host(.toggle-activated) .toggle-inner{width:34px}:host(.toggle-activated.toggle-checked) .toggle-inner{left:-4px}:host-context([dir=rtl]).toggle-activated.toggle-checked .toggle-inner,:host-context([dir=rtl]):host(.toggle-activated.toggle-checked) .toggle-inner{left:unset;right:unset;right:-4px}:host(.toggle-disabled){opacity:.3}:host(.in-item[slot]){margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;padding-left:16px;padding-right:8px;padding-top:6px;padding-bottom:5px}\\@supports ((-webkit-margin-start:0) or (margin-inline-start:0)) or (-webkit-margin-start:0){:host(.in-item[slot]){padding-left:unset;padding-right:unset;-webkit-padding-start:16px;padding-inline-start:16px;-webkit-padding-end:8px;padding-inline-end:8px}}:host(.in-item[slot=start]){padding-left:0;padding-right:16px;padding-top:6px;padding-bottom:5px}\\@supports ((-webkit-margin-start:0) or (margin-inline-start:0)) or (-webkit-margin-start:0){:host(.in-item[slot=start]){padding-left:unset;padding-right:unset;-webkit-padding-start:0;padding-inline-start:0;-webkit-padding-end:16px;padding-inline-end:16px}}\";\n    }\n  }]);\n\n  return Toggle;\n}();\n\nvar shouldToggle = function shouldToggle(doc, checked, deltaX, margin) {\n  var isRTL = doc.dir === 'rtl';\n\n  if (checked) {\n    return !isRTL && margin > deltaX || isRTL && -margin < deltaX;\n  } else {\n    return !isRTL && -margin < deltaX || isRTL && margin > deltaX;\n  }\n};\n\nvar toggleIds = 0;\nexport { Toggle as ion_toggle };","map":null,"metadata":{},"sourceType":"module"}