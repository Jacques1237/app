{"ast":null,"code":"/**\r\n * Does a simple sanitization of all elements\r\n * in an untrusted string\r\n */\nvar sanitizeDOMString = function sanitizeDOMString(untrustedString) {\n  try {\n    if (typeof untrustedString !== 'string' || untrustedString === '') {\n      return untrustedString;\n    }\n    /**\r\n     * Create a document fragment\r\n     * separate from the main DOM,\r\n     * create a div to do our work in\r\n     */\n\n\n    var documentFragment = document.createDocumentFragment();\n    var workingDiv = document.createElement('div');\n    documentFragment.appendChild(workingDiv);\n    workingDiv.innerHTML = untrustedString;\n    /**\r\n     * Remove any elements\r\n     * that are blocked\r\n     */\n\n    blockedTags.forEach(function (blockedTag) {\n      var getElementsToRemove = documentFragment.querySelectorAll(blockedTag);\n\n      for (var elementIndex = getElementsToRemove.length - 1; elementIndex >= 0; elementIndex--) {\n        var element = getElementsToRemove[elementIndex];\n\n        if (element.parentNode) {\n          element.parentNode.removeChild(element);\n        } else {\n          documentFragment.removeChild(element);\n        }\n        /**\r\n         * We still need to sanitize\r\n         * the children of this element\r\n         * as they are left behind\r\n         */\n\n\n        var childElements = getElementChildren(element);\n        /* tslint:disable-next-line */\n\n        for (var childIndex = 0; childIndex < childElements.length; childIndex++) {\n          sanitizeElement(childElements[childIndex]);\n        }\n      }\n    });\n    /**\r\n     * Go through remaining elements and remove\r\n     * non-allowed attribs\r\n     */\n    // IE does not support .children on document fragments, only .childNodes\n\n    var dfChildren = getElementChildren(documentFragment);\n    /* tslint:disable-next-line */\n\n    for (var childIndex = 0; childIndex < dfChildren.length; childIndex++) {\n      sanitizeElement(dfChildren[childIndex]);\n    } // Append document fragment to div\n\n\n    var fragmentDiv = document.createElement('div');\n    fragmentDiv.appendChild(documentFragment); // First child is always the div we did our work in\n\n    var getInnerDiv = fragmentDiv.querySelector('div');\n    return getInnerDiv !== null ? getInnerDiv.innerHTML : fragmentDiv.innerHTML;\n  } catch (err) {\n    console.error(err);\n    return '';\n  }\n};\n/**\r\n * Clean up current element based on allowed attributes\r\n * and then recursively dig down into any child elements to\r\n * clean those up as well\r\n */\n\n\nvar sanitizeElement = function sanitizeElement(element) {\n  // IE uses childNodes, so ignore nodes that are not elements\n  if (element.nodeType && element.nodeType !== 1) {\n    return;\n  }\n\n  for (var i = element.attributes.length - 1; i >= 0; i--) {\n    var attribute = element.attributes.item(i);\n    var attributeName = attribute.name; // remove non-allowed attribs\n\n    if (!allowedAttributes.includes(attributeName.toLowerCase())) {\n      element.removeAttribute(attributeName);\n      continue;\n    } // clean up any allowed attribs\n    // that attempt to do any JS funny-business\n\n\n    var attributeValue = attribute.value;\n    /* tslint:disable-next-line */\n\n    if (attributeValue != null && attributeValue.toLowerCase().includes('javascript:')) {\n      element.removeAttribute(attributeName);\n    }\n  }\n  /**\r\n   * Sanitize any nested children\r\n   */\n\n\n  var childElements = getElementChildren(element);\n  /* tslint:disable-next-line */\n\n  for (var _i = 0; _i < childElements.length; _i++) {\n    sanitizeElement(childElements[_i]);\n  }\n};\n/**\r\n * IE doesn't always support .children\r\n * so we revert to .childNodes instead\r\n */\n\n\nvar getElementChildren = function getElementChildren(el) {\n  return el.children != null ? el.children : el.childNodes;\n};\n\nvar allowedAttributes = ['class', 'id', 'href', 'src', 'name', 'slot'];\nvar blockedTags = ['script', 'style', 'iframe', 'meta', 'link', 'object', 'embed'];\nexport { sanitizeDOMString as s };","map":null,"metadata":{},"sourceType":"module"}