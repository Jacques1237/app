{"ast":null,"code":"import _defineProperty from \"C:/Users/wwwja/Desktop/Gallery-master/app/Gallery/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _asyncToGenerator from \"C:/Users/wwwja/Desktop/Gallery-master/app/Gallery/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _toConsumableArray from \"C:/Users/wwwja/Desktop/Gallery-master/app/Gallery/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _createForOfIteratorHelper from \"C:/Users/wwwja/Desktop/Gallery-master/app/Gallery/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";\nimport _classCallCheck from \"C:/Users/wwwja/Desktop/Gallery-master/app/Gallery/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/wwwja/Desktop/Gallery-master/app/Gallery/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _regeneratorRuntime from \"C:/Users/wwwja/Desktop/Gallery-master/app/Gallery/node_modules/@babel/runtime/regenerator\";\nimport { r as registerInstance, c as createEvent, e as getElement, d as getIonMode, h, H as Host } from './core-ca0488fc.js';\nimport './config-3c7f3790.js';\nimport { e as debounce } from './helpers-46f4a262.js';\nimport { o as openURL, c as createColorClasses } from './theme-18cbe2cc.js';\n\nvar Route = /*#__PURE__*/function () {\n  function Route(hostRef) {\n    _classCallCheck(this, Route);\n\n    registerInstance(this, hostRef);\n    /**\n     * Relative path that needs to match in order for this route to apply.\n     *\n     * Accepts paths similar to expressjs so that you can define parameters\n     * in the url /foo/:bar where bar would be available in incoming props.\n     */\n\n    this.url = '';\n    this.ionRouteDataChanged = createEvent(this, \"ionRouteDataChanged\", 7);\n  }\n\n  _createClass(Route, [{\n    key: \"onUpdate\",\n    value: function onUpdate(newValue) {\n      this.ionRouteDataChanged.emit(newValue);\n    }\n  }, {\n    key: \"onComponentProps\",\n    value: function onComponentProps(newValue, oldValue) {\n      if (newValue === oldValue) {\n        return;\n      }\n\n      var keys1 = newValue ? Object.keys(newValue) : [];\n      var keys2 = oldValue ? Object.keys(oldValue) : [];\n\n      if (keys1.length !== keys2.length) {\n        this.onUpdate(newValue);\n        return;\n      }\n\n      var _iterator = _createForOfIteratorHelper(keys1),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var key = _step.value;\n\n          if (newValue[key] !== oldValue[key]) {\n            this.onUpdate(newValue);\n            return;\n          }\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n    }\n  }, {\n    key: \"connectedCallback\",\n    value: function connectedCallback() {\n      this.ionRouteDataChanged.emit();\n    }\n  }], [{\n    key: \"watchers\",\n    get: function get() {\n      return {\n        \"url\": [\"onUpdate\"],\n        \"component\": [\"onUpdate\"],\n        \"componentProps\": [\"onComponentProps\"]\n      };\n    }\n  }]);\n\n  return Route;\n}();\n\nvar RouteRedirect = /*#__PURE__*/function () {\n  function RouteRedirect(hostRef) {\n    _classCallCheck(this, RouteRedirect);\n\n    registerInstance(this, hostRef);\n    this.ionRouteRedirectChanged = createEvent(this, \"ionRouteRedirectChanged\", 7);\n  }\n\n  _createClass(RouteRedirect, [{\n    key: \"propDidChange\",\n    value: function propDidChange() {\n      this.ionRouteRedirectChanged.emit();\n    }\n  }, {\n    key: \"connectedCallback\",\n    value: function connectedCallback() {\n      this.ionRouteRedirectChanged.emit();\n    }\n  }], [{\n    key: \"watchers\",\n    get: function get() {\n      return {\n        \"from\": [\"propDidChange\"],\n        \"to\": [\"propDidChange\"]\n      };\n    }\n  }]);\n\n  return RouteRedirect;\n}();\n\nvar ROUTER_INTENT_NONE = 'root';\nvar ROUTER_INTENT_FORWARD = 'forward';\nvar ROUTER_INTENT_BACK = 'back';\n\nvar generatePath = function generatePath(segments) {\n  var path = segments.filter(function (s) {\n    return s.length > 0;\n  }).join('/');\n  return '/' + path;\n};\n\nvar chainToPath = function chainToPath(chain) {\n  var path = [];\n\n  var _iterator2 = _createForOfIteratorHelper(chain),\n      _step2;\n\n  try {\n    for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n      var route = _step2.value;\n\n      var _iterator3 = _createForOfIteratorHelper(route.path),\n          _step3;\n\n      try {\n        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n          var segment = _step3.value;\n\n          if (segment[0] === ':') {\n            var param = route.params && route.params[segment.slice(1)];\n\n            if (!param) {\n              return null;\n            }\n\n            path.push(param);\n          } else if (segment !== '') {\n            path.push(segment);\n          }\n        }\n      } catch (err) {\n        _iterator3.e(err);\n      } finally {\n        _iterator3.f();\n      }\n    }\n  } catch (err) {\n    _iterator2.e(err);\n  } finally {\n    _iterator2.f();\n  }\n\n  return path;\n};\n\nvar writePath = function writePath(history, root, useHash, path, direction, state) {\n  var url = generatePath([].concat(_toConsumableArray(parsePath(root)), _toConsumableArray(path)));\n\n  if (useHash) {\n    url = '#' + url;\n  }\n\n  if (direction === ROUTER_INTENT_FORWARD) {\n    history.pushState(state, '', url);\n  } else {\n    history.replaceState(state, '', url);\n  }\n};\n\nvar removePrefix = function removePrefix(prefix, path) {\n  if (prefix.length > path.length) {\n    return null;\n  }\n\n  if (prefix.length <= 1 && prefix[0] === '') {\n    return path;\n  }\n\n  for (var i = 0; i < prefix.length; i++) {\n    if (prefix[i].length > 0 && prefix[i] !== path[i]) {\n      return null;\n    }\n  }\n\n  if (path.length === prefix.length) {\n    return [''];\n  }\n\n  return path.slice(prefix.length);\n};\n\nvar readPath = function readPath(loc, root, useHash) {\n  var pathname = loc.pathname;\n\n  if (useHash) {\n    var hash = loc.hash;\n    pathname = hash[0] === '#' ? hash.slice(1) : '';\n  }\n\n  var prefix = parsePath(root);\n  var path = parsePath(pathname);\n  return removePrefix(prefix, path);\n};\n\nvar parsePath = function parsePath(path) {\n  if (path == null) {\n    return [''];\n  }\n\n  var segments = path.split('/').map(function (s) {\n    return s.trim();\n  }).filter(function (s) {\n    return s.length > 0;\n  });\n\n  if (segments.length === 0) {\n    return [''];\n  } else {\n    return segments;\n  }\n};\n\nvar printRoutes = function printRoutes(routes) {\n  console.group(\"[ion-core] ROUTES[\".concat(routes.length, \"]\"));\n\n  var _iterator4 = _createForOfIteratorHelper(routes),\n      _step4;\n\n  try {\n    var _loop = function _loop() {\n      var chain = _step4.value;\n      var path = [];\n      chain.forEach(function (r) {\n        return path.push.apply(path, _toConsumableArray(r.path));\n      });\n      var ids = chain.map(function (r) {\n        return r.id;\n      });\n      console.debug(\"%c \".concat(generatePath(path)), 'font-weight: bold; padding-left: 20px', '=>\\t', \"(\".concat(ids.join(', '), \")\"));\n    };\n\n    for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n      _loop();\n    }\n  } catch (err) {\n    _iterator4.e(err);\n  } finally {\n    _iterator4.f();\n  }\n\n  console.groupEnd();\n};\n\nvar printRedirects = function printRedirects(redirects) {\n  console.group(\"[ion-core] REDIRECTS[\".concat(redirects.length, \"]\"));\n\n  var _iterator5 = _createForOfIteratorHelper(redirects),\n      _step5;\n\n  try {\n    for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n      var redirect = _step5.value;\n\n      if (redirect.to) {\n        console.debug('FROM: ', \"$c \".concat(generatePath(redirect.from)), 'font-weight: bold', ' TO: ', \"$c \".concat(generatePath(redirect.to)), 'font-weight: bold');\n      }\n    }\n  } catch (err) {\n    _iterator5.e(err);\n  } finally {\n    _iterator5.f();\n  }\n\n  console.groupEnd();\n};\n\nvar _writeNavState = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(root, chain, direction, index) {\n    var changed,\n        outlet,\n        route,\n        result,\n        _args = arguments;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            changed = _args.length > 4 && _args[4] !== undefined ? _args[4] : false;\n            _context.prev = 1;\n            // find next navigation outlet in the DOM\n            outlet = searchNavNode(root); // make sure we can continue interacting the DOM, otherwise abort\n\n            if (!(index >= chain.length || !outlet)) {\n              _context.next = 5;\n              break;\n            }\n\n            return _context.abrupt(\"return\", changed);\n\n          case 5:\n            _context.next = 7;\n            return outlet.componentOnReady();\n\n          case 7:\n            route = chain[index];\n            _context.next = 10;\n            return outlet.setRouteId(route.id, route.params, direction);\n\n          case 10:\n            result = _context.sent;\n\n            // if the outlet changed the page, reset navigation to neutral (no direction)\n            // this means nested outlets will not animate\n            if (result.changed) {\n              direction = ROUTER_INTENT_NONE;\n              changed = true;\n            } // recursively set nested outlets\n\n\n            _context.next = 14;\n            return _writeNavState(result.element, chain, direction, index + 1, changed);\n\n          case 14:\n            changed = _context.sent;\n\n            if (!result.markVisible) {\n              _context.next = 18;\n              break;\n            }\n\n            _context.next = 18;\n            return result.markVisible();\n\n          case 18:\n            return _context.abrupt(\"return\", changed);\n\n          case 21:\n            _context.prev = 21;\n            _context.t0 = _context[\"catch\"](1);\n            console.error(_context.t0);\n            return _context.abrupt(\"return\", false);\n\n          case 25:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[1, 21]]);\n  }));\n\n  return function writeNavState(_x, _x2, _x3, _x4) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nvar readNavState = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(root) {\n    var ids, outlet, node, id;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            ids = [];\n            node = root; // tslint:disable-next-line:no-constant-condition\n\n          case 2:\n            if (!true) {\n              _context2.next = 20;\n              break;\n            }\n\n            outlet = searchNavNode(node);\n\n            if (!outlet) {\n              _context2.next = 17;\n              break;\n            }\n\n            _context2.next = 7;\n            return outlet.getRouteId();\n\n          case 7:\n            id = _context2.sent;\n\n            if (!id) {\n              _context2.next = 14;\n              break;\n            }\n\n            node = id.element;\n            id.element = undefined;\n            ids.push(id);\n            _context2.next = 15;\n            break;\n\n          case 14:\n            return _context2.abrupt(\"break\", 20);\n\n          case 15:\n            _context2.next = 18;\n            break;\n\n          case 17:\n            return _context2.abrupt(\"break\", 20);\n\n          case 18:\n            _context2.next = 2;\n            break;\n\n          case 20:\n            return _context2.abrupt(\"return\", {\n              ids: ids,\n              outlet: outlet\n            });\n\n          case 21:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function readNavState(_x5) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nvar waitUntilNavNode = function waitUntilNavNode() {\n  if (searchNavNode(document.body)) {\n    return Promise.resolve();\n  }\n\n  return new Promise(function (resolve) {\n    window.addEventListener('ionNavWillLoad', resolve, {\n      once: true\n    });\n  });\n};\n\nvar QUERY = ':not([no-router]) ion-nav, :not([no-router]) ion-tabs, :not([no-router]) ion-router-outlet';\n\nvar searchNavNode = function searchNavNode(root) {\n  if (!root) {\n    return undefined;\n  }\n\n  if (root.matches(QUERY)) {\n    return root;\n  }\n\n  var outlet = root.querySelector(QUERY);\n  return outlet ? outlet : undefined;\n};\n\nvar matchesRedirect = function matchesRedirect(input, route) {\n  var from = route.from,\n      to = route.to;\n\n  if (to === undefined) {\n    return false;\n  }\n\n  if (from.length > input.length) {\n    return false;\n  }\n\n  for (var i = 0; i < from.length; i++) {\n    var expected = from[i];\n\n    if (expected === '*') {\n      return true;\n    }\n\n    if (expected !== input[i]) {\n      return false;\n    }\n  }\n\n  return from.length === input.length;\n};\n\nvar routeRedirect = function routeRedirect(path, routes) {\n  return routes.find(function (route) {\n    return matchesRedirect(path, route);\n  });\n};\n\nvar matchesIDs = function matchesIDs(ids, chain) {\n  var len = Math.min(ids.length, chain.length);\n  var i = 0;\n\n  for (; i < len; i++) {\n    if (ids[i].toLowerCase() !== chain[i].id) {\n      break;\n    }\n  }\n\n  return i;\n};\n\nvar matchesPath = function matchesPath(inputPath, chain) {\n  var segments = new RouterSegments(inputPath);\n  var matchesDefault = false;\n  var allparams;\n\n  for (var i = 0; i < chain.length; i++) {\n    var path = chain[i].path;\n\n    if (path[0] === '') {\n      matchesDefault = true;\n    } else {\n      var _iterator6 = _createForOfIteratorHelper(path),\n          _step6;\n\n      try {\n        for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {\n          var segment = _step6.value;\n          var data = segments.next(); // data param\n\n          if (segment[0] === ':') {\n            if (data === '') {\n              return null;\n            }\n\n            allparams = allparams || [];\n            var params = allparams[i] || (allparams[i] = {});\n            params[segment.slice(1)] = data;\n          } else if (data !== segment) {\n            return null;\n          }\n        }\n      } catch (err) {\n        _iterator6.e(err);\n      } finally {\n        _iterator6.f();\n      }\n\n      matchesDefault = false;\n    }\n  }\n\n  var matches = matchesDefault ? matchesDefault === (segments.next() === '') : true;\n\n  if (!matches) {\n    return null;\n  }\n\n  if (allparams) {\n    return chain.map(function (route, i) {\n      return {\n        id: route.id,\n        path: route.path,\n        params: mergeParams(route.params, allparams[i])\n      };\n    });\n  }\n\n  return chain;\n};\n\nvar mergeParams = function mergeParams(a, b) {\n  if (!a && b) {\n    return b;\n  } else if (a && !b) {\n    return a;\n  } else if (a && b) {\n    return Object.assign(Object.assign({}, a), b);\n  }\n\n  return undefined;\n};\n\nvar routerIDsToChain = function routerIDsToChain(ids, chains) {\n  var match = null;\n  var maxMatches = 0;\n  var plainIDs = ids.map(function (i) {\n    return i.id;\n  });\n\n  var _iterator7 = _createForOfIteratorHelper(chains),\n      _step7;\n\n  try {\n    for (_iterator7.s(); !(_step7 = _iterator7.n()).done;) {\n      var chain = _step7.value;\n      var score = matchesIDs(plainIDs, chain);\n\n      if (score > maxMatches) {\n        match = chain;\n        maxMatches = score;\n      }\n    }\n  } catch (err) {\n    _iterator7.e(err);\n  } finally {\n    _iterator7.f();\n  }\n\n  if (match) {\n    return match.map(function (route, i) {\n      return {\n        id: route.id,\n        path: route.path,\n        params: mergeParams(route.params, ids[i] && ids[i].params)\n      };\n    });\n  }\n\n  return null;\n};\n\nvar routerPathToChain = function routerPathToChain(path, chains) {\n  var match = null;\n  var matches = 0;\n\n  var _iterator8 = _createForOfIteratorHelper(chains),\n      _step8;\n\n  try {\n    for (_iterator8.s(); !(_step8 = _iterator8.n()).done;) {\n      var chain = _step8.value;\n      var matchedChain = matchesPath(path, chain);\n\n      if (matchedChain !== null) {\n        var score = computePriority(matchedChain);\n\n        if (score > matches) {\n          matches = score;\n          match = matchedChain;\n        }\n      }\n    }\n  } catch (err) {\n    _iterator8.e(err);\n  } finally {\n    _iterator8.f();\n  }\n\n  return match;\n};\n\nvar computePriority = function computePriority(chain) {\n  var score = 1;\n  var level = 1;\n\n  var _iterator9 = _createForOfIteratorHelper(chain),\n      _step9;\n\n  try {\n    for (_iterator9.s(); !(_step9 = _iterator9.n()).done;) {\n      var route = _step9.value;\n\n      var _iterator10 = _createForOfIteratorHelper(route.path),\n          _step10;\n\n      try {\n        for (_iterator10.s(); !(_step10 = _iterator10.n()).done;) {\n          var path = _step10.value;\n\n          if (path[0] === ':') {\n            score += Math.pow(1, level);\n          } else if (path !== '') {\n            score += Math.pow(2, level);\n          }\n\n          level++;\n        }\n      } catch (err) {\n        _iterator10.e(err);\n      } finally {\n        _iterator10.f();\n      }\n    }\n  } catch (err) {\n    _iterator9.e(err);\n  } finally {\n    _iterator9.f();\n  }\n\n  return score;\n};\n\nvar RouterSegments = /*#__PURE__*/function () {\n  function RouterSegments(path) {\n    _classCallCheck(this, RouterSegments);\n\n    this.path = path.slice();\n  }\n\n  _createClass(RouterSegments, [{\n    key: \"next\",\n    value: function next() {\n      if (this.path.length > 0) {\n        return this.path.shift();\n      }\n\n      return '';\n    }\n  }]);\n\n  return RouterSegments;\n}();\n\nvar readRedirects = function readRedirects(root) {\n  return Array.from(root.children).filter(function (el) {\n    return el.tagName === 'ION-ROUTE-REDIRECT';\n  }).map(function (el) {\n    var to = readProp(el, 'to');\n    return {\n      from: parsePath(readProp(el, 'from')),\n      to: to == null ? undefined : parsePath(to)\n    };\n  });\n};\n\nvar readRoutes = function readRoutes(root) {\n  return flattenRouterTree(readRouteNodes(root));\n};\n\nvar readRouteNodes = function readRouteNodes(root) {\n  var node = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : root;\n  return Array.from(node.children).filter(function (el) {\n    return el.tagName === 'ION-ROUTE' && el.component;\n  }).map(function (el) {\n    var component = readProp(el, 'component');\n\n    if (component == null) {\n      throw new Error('component missing in ion-route');\n    }\n\n    return {\n      path: parsePath(readProp(el, 'url')),\n      id: component.toLowerCase(),\n      params: el.componentProps,\n      children: readRouteNodes(root, el)\n    };\n  });\n};\n\nvar readProp = function readProp(el, prop) {\n  if (prop in el) {\n    return el[prop];\n  }\n\n  if (el.hasAttribute(prop)) {\n    return el.getAttribute(prop);\n  }\n\n  return null;\n};\n\nvar flattenRouterTree = function flattenRouterTree(nodes) {\n  var routes = [];\n\n  var _iterator11 = _createForOfIteratorHelper(nodes),\n      _step11;\n\n  try {\n    for (_iterator11.s(); !(_step11 = _iterator11.n()).done;) {\n      var node = _step11.value;\n      flattenNode([], routes, node);\n    }\n  } catch (err) {\n    _iterator11.e(err);\n  } finally {\n    _iterator11.f();\n  }\n\n  return routes;\n};\n\nvar flattenNode = function flattenNode(chain, routes, node) {\n  var s = chain.slice();\n  s.push({\n    id: node.id,\n    path: node.path,\n    params: node.params\n  });\n\n  if (node.children.length === 0) {\n    routes.push(s);\n    return;\n  }\n\n  var _iterator12 = _createForOfIteratorHelper(node.children),\n      _step12;\n\n  try {\n    for (_iterator12.s(); !(_step12 = _iterator12.n()).done;) {\n      var sub = _step12.value;\n      flattenNode(s, routes, sub);\n    }\n  } catch (err) {\n    _iterator12.e(err);\n  } finally {\n    _iterator12.f();\n  }\n};\n\nvar Router = /*#__PURE__*/function () {\n  function Router(hostRef) {\n    _classCallCheck(this, Router);\n\n    registerInstance(this, hostRef);\n    this.previousPath = null;\n    this.busy = false;\n    this.state = 0;\n    this.lastState = 0;\n    /**\n     * By default `ion-router` will match the routes at the root path (\"/\").\n     * That can be changed when\n     *\n     */\n\n    this.root = '/';\n    /**\n     * The router can work in two \"modes\":\n     * - With hash: `/index.html#/path/to/page`\n     * - Without hash: `/path/to/page`\n     *\n     * Using one or another might depend in the requirements of your app and/or where it's deployed.\n     *\n     * Usually \"hash-less\" navigation works better for SEO and it's more user friendly too, but it might\n     * requires additional server-side configuration in order to properly work.\n     *\n     * On the otherside hash-navigation is much easier to deploy, it even works over the file protocol.\n     *\n     * By default, this property is `true`, change to `false` to allow hash-less URLs.\n     */\n\n    this.useHash = true;\n    this.ionRouteWillChange = createEvent(this, \"ionRouteWillChange\", 7);\n    this.ionRouteDidChange = createEvent(this, \"ionRouteDidChange\", 7);\n  }\n\n  _createClass(Router, [{\n    key: \"componentWillLoad\",\n    value: function () {\n      var _componentWillLoad = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                console.debug('[ion-router] router will load');\n                _context3.next = 3;\n                return waitUntilNavNode();\n\n              case 3:\n                console.debug('[ion-router] found nav');\n                _context3.next = 6;\n                return this.onRoutesChanged();\n\n              case 6:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function componentWillLoad() {\n        return _componentWillLoad.apply(this, arguments);\n      }\n\n      return componentWillLoad;\n    }()\n  }, {\n    key: \"componentDidLoad\",\n    value: function componentDidLoad() {\n      window.addEventListener('ionRouteRedirectChanged', debounce(this.onRedirectChanged.bind(this), 10));\n      window.addEventListener('ionRouteDataChanged', debounce(this.onRoutesChanged.bind(this), 100));\n    }\n  }, {\n    key: \"onPopState\",\n    value: function onPopState() {\n      var direction = this.historyDirection();\n      var path = this.getPath();\n      console.debug('[ion-router] URL changed -> update nav', path, direction);\n      return this.writeNavStateRoot(path, direction);\n    }\n  }, {\n    key: \"onBackButton\",\n    value: function onBackButton(ev) {\n      var _this = this;\n\n      ev.detail.register(0, function () {\n        return _this.back();\n      });\n    }\n    /**\n     * Navigate to the specified URL.\n     *\n     * @param url The url to navigate to.\n     * @param direction The direction of the animation. Defaults to `\"forward\"`.\n     */\n\n  }, {\n    key: \"push\",\n    value: function push(url) {\n      var direction = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'forward';\n\n      if (url.startsWith('.')) {\n        url = new URL(url, window.location.href).pathname;\n      }\n\n      console.debug('[ion-router] URL pushed -> updating nav', url, direction);\n      var path = parsePath(url);\n      this.setPath(path, direction);\n      return this.writeNavStateRoot(path, direction);\n    }\n    /**\n     * Go back to previous page in the window.history.\n     */\n\n  }, {\n    key: \"back\",\n    value: function back() {\n      window.history.back();\n      return Promise.resolve(this.waitPromise);\n    }\n    /** @internal */\n\n  }, {\n    key: \"printDebug\",\n    value: function () {\n      var _printDebug = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                console.debug('CURRENT PATH', this.getPath());\n                console.debug('PREVIOUS PATH', this.previousPath);\n                printRoutes(readRoutes(this.el));\n                printRedirects(readRedirects(this.el));\n\n              case 4:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function printDebug() {\n        return _printDebug.apply(this, arguments);\n      }\n\n      return printDebug;\n    }()\n    /** @internal */\n\n  }, {\n    key: \"navChanged\",\n    value: function () {\n      var _navChanged = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(direction) {\n        var _yield$readNavState, ids, outlet, routes, chain, path;\n\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                if (!this.busy) {\n                  _context5.next = 3;\n                  break;\n                }\n\n                console.warn('[ion-router] router is busy, navChanged was cancelled');\n                return _context5.abrupt(\"return\", false);\n\n              case 3:\n                _context5.next = 5;\n                return readNavState(window.document.body);\n\n              case 5:\n                _yield$readNavState = _context5.sent;\n                ids = _yield$readNavState.ids;\n                outlet = _yield$readNavState.outlet;\n                routes = readRoutes(this.el);\n                chain = routerIDsToChain(ids, routes);\n\n                if (chain) {\n                  _context5.next = 13;\n                  break;\n                }\n\n                console.warn('[ion-router] no matching URL for ', ids.map(function (i) {\n                  return i.id;\n                }));\n                return _context5.abrupt(\"return\", false);\n\n              case 13:\n                path = chainToPath(chain);\n\n                if (path) {\n                  _context5.next = 17;\n                  break;\n                }\n\n                console.warn('[ion-router] router could not match path because some required param is missing');\n                return _context5.abrupt(\"return\", false);\n\n              case 17:\n                console.debug('[ion-router] nav changed -> update URL', ids, path);\n                this.setPath(path, direction);\n                _context5.next = 21;\n                return this.safeWriteNavState(outlet, chain, ROUTER_INTENT_NONE, path, null, ids.length);\n\n              case 21:\n                return _context5.abrupt(\"return\", true);\n\n              case 22:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n\n      function navChanged(_x6) {\n        return _navChanged.apply(this, arguments);\n      }\n\n      return navChanged;\n    }()\n  }, {\n    key: \"onRedirectChanged\",\n    value: function onRedirectChanged() {\n      var path = this.getPath();\n\n      if (path && routeRedirect(path, readRedirects(this.el))) {\n        this.writeNavStateRoot(path, ROUTER_INTENT_NONE);\n      }\n    }\n  }, {\n    key: \"onRoutesChanged\",\n    value: function onRoutesChanged() {\n      return this.writeNavStateRoot(this.getPath(), ROUTER_INTENT_NONE);\n    }\n  }, {\n    key: \"historyDirection\",\n    value: function historyDirection() {\n      var win = window;\n\n      if (win.history.state === null) {\n        this.state++;\n        win.history.replaceState(this.state, win.document.title, win.document.location && win.document.location.href);\n      }\n\n      var state = win.history.state;\n      var lastState = this.lastState;\n      this.lastState = state;\n\n      if (state > lastState) {\n        return ROUTER_INTENT_FORWARD;\n      } else if (state < lastState) {\n        return ROUTER_INTENT_BACK;\n      } else {\n        return ROUTER_INTENT_NONE;\n      }\n    }\n  }, {\n    key: \"writeNavStateRoot\",\n    value: function () {\n      var _writeNavStateRoot = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6(path, direction) {\n        var redirects, redirect, redirectFrom, routes, chain;\n        return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                if (path) {\n                  _context6.next = 3;\n                  break;\n                }\n\n                console.error('[ion-router] URL is not part of the routing set');\n                return _context6.abrupt(\"return\", false);\n\n              case 3:\n                // lookup redirect rule\n                redirects = readRedirects(this.el);\n                redirect = routeRedirect(path, redirects);\n                redirectFrom = null;\n\n                if (redirect) {\n                  this.setPath(redirect.to, direction);\n                  redirectFrom = redirect.from;\n                  path = redirect.to;\n                } // lookup route chain\n\n\n                routes = readRoutes(this.el);\n                chain = routerPathToChain(path, routes);\n\n                if (chain) {\n                  _context6.next = 12;\n                  break;\n                }\n\n                console.error('[ion-router] the path does not match any route');\n                return _context6.abrupt(\"return\", false);\n\n              case 12:\n                return _context6.abrupt(\"return\", this.safeWriteNavState(document.body, chain, direction, path, redirectFrom));\n\n              case 13:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this);\n      }));\n\n      function writeNavStateRoot(_x7, _x8) {\n        return _writeNavStateRoot.apply(this, arguments);\n      }\n\n      return writeNavStateRoot;\n    }()\n  }, {\n    key: \"safeWriteNavState\",\n    value: function () {\n      var _safeWriteNavState = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7(node, chain, direction, path, redirectFrom) {\n        var index,\n            unlock,\n            changed,\n            _args7 = arguments;\n        return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                index = _args7.length > 5 && _args7[5] !== undefined ? _args7[5] : 0;\n                _context7.next = 3;\n                return this.lock();\n\n              case 3:\n                unlock = _context7.sent;\n                changed = false;\n                _context7.prev = 5;\n                _context7.next = 8;\n                return this.writeNavState(node, chain, direction, path, redirectFrom, index);\n\n              case 8:\n                changed = _context7.sent;\n                _context7.next = 14;\n                break;\n\n              case 11:\n                _context7.prev = 11;\n                _context7.t0 = _context7[\"catch\"](5);\n                console.error(_context7.t0);\n\n              case 14:\n                unlock();\n                return _context7.abrupt(\"return\", changed);\n\n              case 16:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7, this, [[5, 11]]);\n      }));\n\n      function safeWriteNavState(_x9, _x10, _x11, _x12, _x13) {\n        return _safeWriteNavState.apply(this, arguments);\n      }\n\n      return safeWriteNavState;\n    }()\n  }, {\n    key: \"lock\",\n    value: function () {\n      var _lock = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee8() {\n        var p, resolve;\n        return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                p = this.waitPromise;\n                this.waitPromise = new Promise(function (r) {\n                  return resolve = r;\n                });\n\n                if (!(p !== undefined)) {\n                  _context8.next = 5;\n                  break;\n                }\n\n                _context8.next = 5;\n                return p;\n\n              case 5:\n                return _context8.abrupt(\"return\", resolve);\n\n              case 6:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee8, this);\n      }));\n\n      function lock() {\n        return _lock.apply(this, arguments);\n      }\n\n      return lock;\n    }()\n  }, {\n    key: \"writeNavState\",\n    value: function () {\n      var _writeNavState2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee9(node, chain, direction, path, redirectFrom) {\n        var index,\n            routeEvent,\n            changed,\n            _args9 = arguments;\n        return _regeneratorRuntime.wrap(function _callee9$(_context9) {\n          while (1) {\n            switch (_context9.prev = _context9.next) {\n              case 0:\n                index = _args9.length > 5 && _args9[5] !== undefined ? _args9[5] : 0;\n\n                if (!this.busy) {\n                  _context9.next = 4;\n                  break;\n                }\n\n                console.warn('[ion-router] router is busy, transition was cancelled');\n                return _context9.abrupt(\"return\", false);\n\n              case 4:\n                this.busy = true; // generate route event and emit will change\n\n                routeEvent = this.routeChangeEvent(path, redirectFrom);\n\n                if (routeEvent) {\n                  this.ionRouteWillChange.emit(routeEvent);\n                }\n\n                _context9.next = 9;\n                return _writeNavState(node, chain, direction, index);\n\n              case 9:\n                changed = _context9.sent;\n                this.busy = false;\n\n                if (changed) {\n                  console.debug('[ion-router] route changed', path);\n                } // emit did change\n\n\n                if (routeEvent) {\n                  this.ionRouteDidChange.emit(routeEvent);\n                }\n\n                return _context9.abrupt(\"return\", changed);\n\n              case 14:\n              case \"end\":\n                return _context9.stop();\n            }\n          }\n        }, _callee9, this);\n      }));\n\n      function writeNavState(_x14, _x15, _x16, _x17, _x18) {\n        return _writeNavState2.apply(this, arguments);\n      }\n\n      return writeNavState;\n    }()\n  }, {\n    key: \"setPath\",\n    value: function setPath(path, direction) {\n      this.state++;\n      writePath(window.history, this.root, this.useHash, path, direction, this.state);\n    }\n  }, {\n    key: \"getPath\",\n    value: function getPath() {\n      return readPath(window.location, this.root, this.useHash);\n    }\n  }, {\n    key: \"routeChangeEvent\",\n    value: function routeChangeEvent(path, redirectFromPath) {\n      var from = this.previousPath;\n      var to = generatePath(path);\n      this.previousPath = to;\n\n      if (to === from) {\n        return null;\n      }\n\n      var redirectedFrom = redirectFromPath ? generatePath(redirectFromPath) : null;\n      return {\n        from: from,\n        redirectedFrom: redirectedFrom,\n        to: to\n      };\n    }\n  }, {\n    key: \"el\",\n    get: function get() {\n      return getElement(this);\n    }\n  }]);\n\n  return Router;\n}();\n\nvar RouterLink = /*#__PURE__*/function () {\n  function RouterLink(hostRef) {\n    var _this2 = this;\n\n    _classCallCheck(this, RouterLink);\n\n    registerInstance(this, hostRef);\n    /**\n     * When using a router, it specifies the transition direction when navigating to\n     * another page using `href`.\n     */\n\n    this.routerDirection = 'forward';\n\n    this.onClick = function (ev) {\n      openURL(_this2.href, ev, _this2.routerDirection);\n    };\n  }\n\n  _createClass(RouterLink, [{\n    key: \"render\",\n    value: function render() {\n      var _Object$assign;\n\n      var mode = getIonMode(this);\n      var attrs = {\n        href: this.href,\n        rel: this.rel,\n        target: this.target\n      };\n      return h(Host, {\n        onClick: this.onClick,\n        class: Object.assign(Object.assign({}, createColorClasses(this.color)), (_Object$assign = {}, _defineProperty(_Object$assign, mode, true), _defineProperty(_Object$assign, 'ion-activatable', true), _Object$assign))\n      }, h(\"a\", Object.assign({}, attrs), h(\"slot\", null)));\n    }\n  }], [{\n    key: \"style\",\n    get: function get() {\n      return \":host{--background:transparent;--color:var(--ion-color-primary,#3880ff);background:var(--background);color:var(--color)}:host(.ion-color){color:var(--ion-color-base)}a{font-family:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;letter-spacing:inherit;text-decoration:inherit;text-overflow:inherit;text-transform:inherit;text-align:inherit;white-space:inherit;color:inherit}\";\n    }\n  }]);\n\n  return RouterLink;\n}();\n\nexport { Route as ion_route, RouteRedirect as ion_route_redirect, Router as ion_router, RouterLink as ion_router_link };","map":null,"metadata":{},"sourceType":"module"}