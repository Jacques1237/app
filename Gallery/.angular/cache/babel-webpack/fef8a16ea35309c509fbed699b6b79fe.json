{"ast":null,"code":"import _classCallCheck from \"C:/Users/wwwja/Desktop/Gallery-master/app/Gallery/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/wwwja/Desktop/Gallery-master/app/Gallery/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _regeneratorRuntime from \"C:/Users/wwwja/Desktop/Gallery-master/app/Gallery/node_modules/@babel/runtime/regenerator\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nimport { of } from 'rxjs';\nimport { AngularFireAuth } from '@angular/fire/compat/auth';\nimport { AngularFirestore } from '@angular/fire/compat/firestore';\nimport * as firebase from 'firebase/compat/app';\nimport { Router } from '@angular/router';\nimport { LoadingController, ToastController } from '@ionic/angular';\nimport { switchMap } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/fire/compat/firestore\";\nimport * as i2 from \"@angular/fire/compat/auth\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@ionic/angular\";\nexport var AuthService = /*#__PURE__*/(function () {\n  var AuthService = /*#__PURE__*/function () {\n    function AuthService(afs, afauth, router, LoadingCtrl, toastr) {\n      var _this = this;\n\n      _classCallCheck(this, AuthService);\n\n      this.afs = afs;\n      this.afauth = afauth;\n      this.router = router;\n      this.LoadingCtrl = LoadingCtrl;\n      this.toastr = toastr;\n      this.user$ = this.afauth.authState.pipe(switchMap(function (user) {\n        if (user) {\n          return _this.afs.doc(\"user/\".concat(user.uid)).valueChanges();\n        } else {\n          return of(null);\n        }\n      }));\n    } // end of constructor\n\n\n    _createClass(AuthService, [{\n      key: \"signIn\",\n      value: function signIn(email, password) {\n        return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n          var _this2 = this;\n\n          var loading;\n          return _regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  _context.next = 2;\n                  return this.LoadingCtrl.create({\n                    message: 'Authenticating...',\n                    spinner: 'crescent',\n                    showBackdrop: true\n                  });\n\n                case 2:\n                  loading = _context.sent;\n                  loading.present();\n                  this.afauth.setPersistence(firebase.default.auth.Auth.Persistence.LOCAL).then(function () {\n                    _this2.afauth.signInWithEmailAndPassword(email, password).then(function (data) {\n                      if (!data.user.emailVerified) {\n                        loading.dismiss();\n\n                        _this2.toast('Please verify your email adress!', 'warning');\n\n                        _this2.afauth.signOut();\n                      } else {\n                        loading.dismiss(); //this.router.navigate(['/login']);\n                      }\n                    }).catch(function (error) {\n                      loading.dismiss();\n\n                      _this2.toast(error.message, 'danger');\n                    });\n                  }).catch(function (error) {\n                    loading.dismiss();\n\n                    _this2.toast(error.message, 'danger');\n                  });\n\n                case 5:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee, this);\n        }));\n      }\n    }, {\n      key: \"signOut\",\n      value: function signOut() {\n        return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n          var loading;\n          return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n            while (1) {\n              switch (_context2.prev = _context2.next) {\n                case 0:\n                  _context2.next = 2;\n                  return this.LoadingCtrl.create({\n                    spinner: 'crescent',\n                    showBackdrop: true\n                  });\n\n                case 2:\n                  loading = _context2.sent;\n                  loading.present();\n                  this.afauth.signOut().then(function () {\n                    loading.dismiss(); //this.router.navigate(['/login-confirm']);\n                  });\n\n                case 5:\n                case \"end\":\n                  return _context2.stop();\n              }\n            }\n          }, _callee2, this);\n        }));\n      }\n    }, {\n      key: \"toast\",\n      value: function toast(message, status) {\n        return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n          var toast;\n          return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n            while (1) {\n              switch (_context3.prev = _context3.next) {\n                case 0:\n                  _context3.next = 2;\n                  return this.toastr.create({\n                    message: message,\n                    color: status,\n                    position: 'top',\n                    duration: 2000\n                  });\n\n                case 2:\n                  toast = _context3.sent;\n                  toast.present();\n\n                case 4:\n                case \"end\":\n                  return _context3.stop();\n              }\n            }\n          }, _callee3, this);\n        }));\n      }\n    }]);\n\n    return AuthService;\n  }();\n\n  AuthService.ɵfac = function AuthService_Factory(t) {\n    return new (t || AuthService)(i0.ɵɵinject(i1.AngularFirestore), i0.ɵɵinject(i2.AngularFireAuth), i0.ɵɵinject(i3.Router), i0.ɵɵinject(i4.LoadingController), i0.ɵɵinject(i4.ToastController));\n  };\n\n  AuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthService,\n    factory: AuthService.ɵfac,\n    providedIn: 'root'\n  });\n  return AuthService;\n})();","map":null,"metadata":{},"sourceType":"module"}